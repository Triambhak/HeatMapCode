@{
    ViewData["Title"] = "Home Page";
}

<!DOCTYPE html>
<html>
<head>
    @*<style>
        /* Define CSS styles for the heatmap */
        .heatmap-container {
            display: grid;
            grid-template-columns: repeat(10, 50px); /* Adjust based on your data */
            grid-template-rows: repeat(10, 50px); /* Adjust based on your data */
            gap: 1px;
            border: 1px solid black;
            width: max-content;
        }

        .heatmap-cell {
            position: relative;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 255, 0.1); /* Initial color */
            transition: background-color 0.3s;
        }

        .heatmap-tooltip {
            position: absolute;
            top: -30px;
            left: 0;
            background-color: rgba(0, 0, 0, 0.7);
            color: white;
            padding: 5px;
            border-radius: 5px;
            display: none;
        }
    </style>*@
</head>@*<body>
    <div class="heatmap-container" id="heatmapContainer">
    </div>

    <script>
        // Example heatmap data (2D array of values)
       const heatmapData = [
      [0.1, 0.3, 0.6, 0.8, 0.4, 0.2, 0.7, 0.9, 0.5, 0.2],
      [0.7, 0.2, 0.4, 0.5, 0.6, 0.1, 0.3, 0.8, 0.2, 0.9],
      [0.5, 0.9, 0.3, 0.2, 0.8, 0.4, 0.1, 0.6, 0.7, 0.2],
      [0.2, 0.7, 0.1, 0.8, 0.4, 0.5, 0.6, 0.3, 0.9, 0.2],
      [0.6, 0.4, 0.8, 0.9, 0.1, 0.7, 0.3, 0.5, 0.2, 0.8],
      [0.3, 0.6, 0.2, 0.7, 0.5, 0.9, 0.4, 0.2, 0.8, 0.1],
      [0.8, 0.1, 0.7, 0.4, 0.2, 0.6, 0.9, 0.5, 0.3, 0.8],
      [0.4, 0.5, 0.9, 0.1, 0.7, 0.3, 0.2, 0.8, 0.6, 0.4],
      [0.9, 0.2, 0.6, 0.3, 0.8, 0.5, 0.7, 0.4, 0.1, 0.9],
      [0.1, 0.8, 0.4, 0.6, 0.3, 0.7, 0.2, 0.9, 0.5, 0.2]
    ];

        const container = document.getElementById("heatmapContainer");

        // Create the heatmap grid
        for (let row = 0; row < heatmapData.length; row++) {
          for (let col = 0; col < heatmapData[row].length; col++) {
            const value = heatmapData[row][col];
            const cell = document.createElement("div");
            cell.className = "heatmap-cell";
            cell.style.backgroundColor = `rgba(255, 0, 0, ${value})`; // Adjust color based on value

            // Create and attach tooltip
            const tooltip = document.createElement("div");
            tooltip.className = "heatmap-tooltip";
            tooltip.textContent = `Value: ${value.toFixed(2)}`; // Display value in tooltip
            cell.appendChild(tooltip);

            // Event listeners for hover display
            cell.addEventListener("mouseenter", () => {
              tooltip.style.display = "block";
            });
            cell.addEventListener("mouseleave", () => {
              tooltip.style.display = "none";
            });

            container.appendChild(cell);
          }
        }
    </script>
</body>*@
<!-- TradingView Widget BEGIN -->
<div style="width:100%;height:500px">
    <div class="tradingview-widget-container">
        <div class="tradingview-widget-container__widget" style=""></div>
        <div class="tradingview-widget-copyright"><a href="https://www.tradingview.com/" rel="noopener nofollow" target="_blank"><span class="blue-text">Track all markets on TradingView</span></a></div>
        <script type="text/javascript" src="https://s3.tradingview.com/external-embedding/embed-widget-stock-heatmap.js" async>
              {
              "exchanges": [],
              "dataSource": "SPX500",
              "grouping": "sector",
              "blockSize": "market_cap_basic",
              "blockColor": "change",
              "locale": "en",
              "symbolUrl": "",
              "colorTheme": "light",
              "hasTopBar": false,
              "isDataSetEnabled": false,
              "isZoomEnabled": true,
              "hasSymbolTooltip": true,
              "width": "100%",
              "height": "100%"
            }
        </script>
    </div>
</div>
<!-- TradingView Widget END -->
</html>
